{"version":3,"sources":["webpack:///./templates/timer-template.hbs","webpack:///./js/time-board.js","webpack:///./js/timer.js"],"names":["Handlebars","module","exports","template","container","depth0","helpers","partials","data","helper","alias1","nullContext","alias2","hooks","helperMissing","alias4","escapeExpression","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","stack1","program","noop","timeBoardRef","document","querySelector","markup","timerTemplate","items","insertAdjacentHTML","refs","restOfDays","restOfHours","restOfMinutes","restOfSeconds","startTime","Date","setInterval","time","days","hours","mins","secs","currentTime","now","pad","Math","floor","textContent","value","String","padStart"],"mappings":"8EAAA,IAAIA,EAAa,EAAQ,QAEzBC,EAAOC,SAAWF,EAAoB,SAAKA,GAAYG,SAAS,CAAC,EAAI,SAASC,EAAUC,EAAOC,EAAQC,EAASC,GAC5G,IAAIC,EAAQC,EAAiB,MAAVL,EAAiBA,EAAUD,EAAUO,aAAe,GAAKC,EAAOR,EAAUS,MAAMC,cAAkCC,EAAOX,EAAUY,iBAAkBC,EAAiBb,EAAUa,gBAAkB,SAASC,EAAQC,GAClO,GAAIC,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,GAC/C,OAAOD,EAAOC,IAKtB,MAAO,2DACHJ,EARuH,mBAQ9GN,EAAqH,OAA3GA,EAASQ,EAAeX,EAAQ,WAAuB,MAAVD,EAAiBY,EAAeZ,EAAO,SAAWA,IAAmBI,EAASG,GAAoCH,EAAOc,KAAKb,EAAO,CAAC,KAAO,QAAQ,KAAO,GAAG,KAAOF,EAAK,IAAM,CAAC,MAAQ,CAAC,KAAO,EAAE,OAAS,IAAI,IAAM,CAAC,KAAO,EAAE,OAAS,OAASC,GACnT,uCACAM,EAVuH,mBAU9GN,EAAmH,OAAzGA,EAASQ,EAAeX,EAAQ,UAAsB,MAAVD,EAAiBY,EAAeZ,EAAO,QAAUA,IAAmBI,EAASG,GAAoCH,EAAOc,KAAKb,EAAO,CAAC,KAAO,OAAO,KAAO,GAAG,KAAOF,EAAK,IAAM,CAAC,MAAQ,CAAC,KAAO,EAAE,OAAS,IAAI,IAAM,CAAC,KAAO,EAAE,OAAS,OAASC,GAChT,yBACJ,SAAW,CAAC,EAAE,YAAY,KAAO,SAASL,EAAUC,EAAOC,EAAQC,EAASC,GAC1E,IAAIgB,EAON,OAA8R,OAArRA,GAPsBpB,EAAUa,gBAAkB,SAASC,EAAQC,GACtE,GAAIC,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,GAC/C,OAAOD,EAAOC,KAKWb,EAAQ,QAAQiB,KAAe,MAAVlB,EAAiBA,EAAUD,EAAUO,aAAe,GAAIN,EAAO,CAAC,KAAO,OAAO,KAAO,GAAG,GAAKD,EAAUqB,QAAQ,EAAGjB,EAAM,GAAG,QAAUJ,EAAUsB,KAAK,KAAOlB,EAAK,IAAM,CAAC,MAAQ,CAAC,KAAO,EAAE,OAAS,GAAG,IAAM,CAAC,KAAO,EAAE,OAAS,OAAiBgB,EAAS,IAC9S,SAAU,K,qGCrBNG,EAAeC,SAASC,cAAc,YACtCC,EAASC,IAAcC,GAC7BL,EAAaM,mBAAmB,YAAaH,G,cCLvCI,EAAO,CACXC,WAAYP,SAASC,cAAc,2BACnCO,YAAaR,SAASC,cAAc,4BACpCQ,cAAeT,SAASC,cAAc,2BACtCS,cAAeV,SAASC,cAAc,4BAGlCU,EAAY,IAAIC,KAAK,gBAEJC,aAAY,WACjC,IAKmBC,EACbC,EACAC,EACAC,EACAC,EATAC,EAAcP,KAAKQ,MAKNN,EAJDH,EAAYQ,EAKxBJ,EAAOM,EAAIC,KAAKC,MAAMT,EAAO,QAC7BE,EAAQK,EAAIC,KAAKC,MAAOT,EAAO,MAAR,OACvBG,EAAOI,EAAIC,KAAKC,MAAOT,EAAO,KAAR,MACtBI,EAAOG,EAAIC,KAAKC,MAAOT,EAAO,IAAe,MAEnDR,EAAKC,WAAWiB,YAAhB,GAAiCT,EACjCT,EAAKE,YAAYgB,YAAjB,GAAkCR,EAClCV,EAAKG,cAAce,YAAnB,GAAoCP,EACpCX,EAAKI,cAAcc,YAAnB,GAAoCN,IAXnC,KAcH,SAASG,EAAII,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,K","file":"main.6fd07fe1d0e4b2d0c11c.js","sourcesContent":["var Handlebars = require(\"../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(container,depth0,helpers,partials,data) {\n    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3=\"function\", alias4=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"field\\\">\\r\\n  <span class=\\\"value\\\" data-value=\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"value\") || (depth0 != null ? lookupProperty(depth0,\"value\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"value\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":3,\"column\":33},\"end\":{\"line\":3,\"column\":42}}}) : helper)))\n    + \">00</span>\\r\\n  <span class=\\\"label\\\">\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"name\") || (depth0 != null ? lookupProperty(depth0,\"name\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"name\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":4,\"column\":22},\"end\":{\"line\":4,\"column\":30}}}) : helper)))\n    + \"</span>\\r\\n</div>\\r\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return ((stack1 = lookupProperty(helpers,\"each\").call(depth0 != null ? depth0 : (container.nullContext || {}),depth0,{\"name\":\"each\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":1,\"column\":0},\"end\":{\"line\":6,\"column\":9}}})) != null ? stack1 : \"\");\n},\"useData\":true});","import timerTemplate from '../templates/timer-template.hbs';\r\nimport items from '../timer.json'\r\n\r\nconst timeBoardRef = document.querySelector('#timer-1');\r\nconst markup = timerTemplate(items);\r\ntimeBoardRef.insertAdjacentHTML('beforeend', markup);","const refs = {\r\n  restOfDays: document.querySelector('span[data-value=\"days\"]'),\r\n  restOfHours: document.querySelector('span[data-value=\"hours\"]'),\r\n  restOfMinutes: document.querySelector('span[data-value=\"mins\"]'),\r\n  restOfSeconds: document.querySelector('span[data-value=\"secs\"]'),\r\n};\r\n\r\nconst startTime = new Date('Dec 31, 2020');\r\n\r\nconst countdownTimer = setInterval(() => {\r\n  const currentTime = Date.now();\r\n  const deltaTime = startTime - currentTime;\r\n  updateClock(deltaTime);\r\n}, 1000);\r\n\r\nfunction updateClock(time) {\r\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n  const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),);\r\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n  refs.restOfDays.textContent = `${days}`;\r\n  refs.restOfHours.textContent = `${hours}`;\r\n  refs.restOfMinutes.textContent = `${mins}`;\r\n  refs.restOfSeconds.textContent = `${secs}`;\r\n};\r\n\r\nfunction pad(value) {\r\n  return String(value).padStart(2, '0');\r\n};\r\n"],"sourceRoot":""}